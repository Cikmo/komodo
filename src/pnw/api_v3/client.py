# Generated by ariadne-codegen
# Source: resources/queries.graphql

from typing import Any, Dict, List, Optional, Union

from .async_base_client import AsyncBaseClient
from .base_model import UNSET, UnsetType
from .get_nations import GetNations
from .mutation_bank_withdraw import MutationBankWithdraw


def gql(q: str) -> str:
    return q


class Client(AsyncBaseClient):
    async def get_nations(
        self,
        nation_id: Union[Optional[List[int]], UnsetType] = UNSET,
        nation_name: Union[Optional[List[str]], UnsetType] = UNSET,
        discord_id: Union[Optional[List[str]], UnsetType] = UNSET,
        page_size: Union[Optional[int], UnsetType] = UNSET,
        page: Union[Optional[int], UnsetType] = UNSET,
        **kwargs: Any
    ) -> GetNations:
        query = gql(
            """
            query get_nations($nation_id: [Int!], $nation_name: [String!], $discord_id: [String!], $page_size: Int = 50, $page: Int) {
              nations(
                id: $nation_id
                nation_name: $nation_name
                discord_id: $discord_id
                first: $page_size
                page: $page
              ) {
                data {
                  ...nationFields
                }
                paginatorInfo {
                  ...paginatorFields
                }
              }
            }

            fragment nationFields on Nation {
              id
              alliance_id
              alliance_position
              alliance_position_id
              nation_name
              leader_name
              continent
              war_policy
              war_policy_turns
              domestic_policy
              domestic_policy_turns
              color
              num_cities
              score
              update_tz
              population
              flag
              vacation_mode_turns
              beige_turns
              espionage_available
              last_active
              date
              soldiers
              tanks
              aircraft
              ships
              missiles
              nukes
              spies
              discord
              discord_id
              turns_since_last_city
              turns_since_last_project
              projects
              project_bits
              moon_landing_date
              mars_landing_date
              wars_won
              wars_lost
              tax_id
              alliance_seniority
              gross_national_income
              gross_domestic_product
              soldier_casualties
              soldier_kills
              tank_casualties
              tank_kills
              aircraft_casualties
              aircraft_kills
              ship_casualties
              ship_kills
              missile_casualties
              missile_kills
              nuke_casualties
              nuke_kills
              spy_casualties
              spy_kills
              spy_attacks
              money_looted
              total_infrastructure_destroyed
              total_infrastructure_lost
              vip
              commendations
              denouncements
              offensive_wars_count
              defensive_wars_count
              economic_policy
              social_policy
              government_type
              credits_redeemed_this_month
              alliance_join_date
            }

            fragment paginatorFields on PaginatorInfo {
              count
              hasMorePages
            }
            """
        )
        variables: Dict[str, object] = {
            "nation_id": nation_id,
            "nation_name": nation_name,
            "discord_id": discord_id,
            "page_size": page_size,
            "page": page,
        }
        response = await self.execute(
            query=query, operation_name="get_nations", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return GetNations.model_validate(data)

    async def mutation_bank_withdraw(
        self,
        receiver: str,
        receiver_type: int,
        note: str,
        money: Union[Optional[float], UnsetType] = UNSET,
        coal: Union[Optional[float], UnsetType] = UNSET,
        oil: Union[Optional[float], UnsetType] = UNSET,
        uranium: Union[Optional[float], UnsetType] = UNSET,
        iron: Union[Optional[float], UnsetType] = UNSET,
        bauxite: Union[Optional[float], UnsetType] = UNSET,
        lead: Union[Optional[float], UnsetType] = UNSET,
        gasoline: Union[Optional[float], UnsetType] = UNSET,
        munitions: Union[Optional[float], UnsetType] = UNSET,
        steel: Union[Optional[float], UnsetType] = UNSET,
        aluminum: Union[Optional[float], UnsetType] = UNSET,
        food: Union[Optional[float], UnsetType] = UNSET,
        **kwargs: Any
    ) -> MutationBankWithdraw:
        query = gql(
            """
            mutation mutation_bank_withdraw($receiver: ID!, $receiver_type: Int!, $money: Float = 0, $coal: Float = 0, $oil: Float = 0, $uranium: Float = 0, $iron: Float = 0, $bauxite: Float = 0, $lead: Float = 0, $gasoline: Float = 0, $munitions: Float = 0, $steel: Float = 0, $aluminum: Float = 0, $food: Float = 0, $note: String!) {
              bankWithdraw(
                receiver: $receiver
                receiver_type: $receiver_type
                money: $money
                coal: $coal
                oil: $oil
                uranium: $uranium
                iron: $iron
                bauxite: $bauxite
                lead: $lead
                gasoline: $gasoline
                munitions: $munitions
                steel: $steel
                aluminum: $aluminum
                food: $food
                note: $note
              ) {
                id
              }
            }
            """
        )
        variables: Dict[str, object] = {
            "receiver": receiver,
            "receiver_type": receiver_type,
            "money": money,
            "coal": coal,
            "oil": oil,
            "uranium": uranium,
            "iron": iron,
            "bauxite": bauxite,
            "lead": lead,
            "gasoline": gasoline,
            "munitions": munitions,
            "steel": steel,
            "aluminum": aluminum,
            "food": food,
            "note": note,
        }
        response = await self.execute(
            query=query,
            operation_name="mutation_bank_withdraw",
            variables=variables,
            **kwargs
        )
        data = self.get_data(response)
        return MutationBankWithdraw.model_validate(data)
